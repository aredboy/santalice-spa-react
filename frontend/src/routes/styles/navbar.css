
.app-navbar {
  position: relative;
  display: flex;
  direction: row;
  align-items: center;
  justify-content: space-between;
  background: #f9f8f8;
  padding: 40px 5px;
  border-bottom: 0.5px solid #4c5b61;
  z-index: 1000;
}

.nav-links {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 30px;
  list-style: none;
  margin:  0 !important;
  padding: 20px 0 0 0;
}

.logo {
    flex: 0;
    width: 200px;
}

.nav-link {
    font-size: 24px;
    font-weight: 600;
    color: #4c5b61;
    text-decoration: none;
    white-space: nowrap;
}

.nav-links.open {
    display: flex;
}

@media (max-width: 992px) {
    .nav-top {
    display: flex;
    justify-content: space-between; /* logo left, hamburger right */
    width: 100%;
    align-items: center;
    padding: 0 1rem 20px 1rem;
    }
    .app-navbar {
        flex-direction: column;
        align-items: stretch;
    }
    .logo {
        order: 0;
    }
    .hamburger {
        order: 1;
        align-self: flex-end;
        justify-self: flex-start;
        padding: 0 40px 10px 0;
    }
    .nav-links {
        order: 2;
        flex-direction: column;
        align-items: flex-start;
        gap: 20px;
        margin-top: 40px;
        padding-left: 20px;
        display: none;
    }
    .nav-links.open {
        display: flex;
    } 
    .nav-links li:last-child {
        align-self: flex-end;
    }
    .nav-link {
      font-size: 22px !important;
    }
}

@media (min-width: 992px) {
    .nav-item.dropdown {
        position: relative;
    }
    .nav-item.dropdown .dropdown-menu {
        display: block !important;
    }
    .logo {
      flex: 0;
      width: 300px;
    }
}

.navbar-link:hover {
    color: #2dbcc1;
}

.navbar-brand::after {
    color: #2dbcc1;
}

/* Hamburger Menu */

.hamburger {
    background: none;
    border: none;
    font-size: 2rem;
    cursor: pointer;
    display: block;
    order: 3;
}

/* Desktop Styles */


@media (min-width: 992px) {
    .hamburger {
        display: none;
    }
    .app-navbar {
        justify-content: space-between;
    }
    .nav-top {
      padding-left: 2rem;
    }
}

@media (min-width: 1200px) {
    .nav-left {
        flex: 0;
    }
    .app-navbar {
        display: flex;
        align-items: center;
        padding: 0 1rem;
    }
    .nav-links {
        display: flex !important;
        flex-direction: row;
        align-items: center;
        justify-content: flex-end !important;
        flex: 1;
        padding-left: 10px;
        margin-left: auto;
        gap: 10px;
        position: relative;
    }
    .nav-links li:last-child {
        display: flex;
        align-items: center;
    }
}

@media (min-width: 1300px) {
    .nav-links {
        padding-left: 30px;
        gap: 30px;
    }
}

.simple-dropdown-item > a,
.simple-dropdown-item > button {
  display: block; 
  padding: 0.45rem 1rem;
  color: #4c5b61;
  text-decoration: none;
}

.simple-dropdown-item:hover > a,
.simple-dropdown-item:hover > button {
    color: #2dbcc1;
}
/* ---------- Desktop: open on hover (>= 992px) ---------- */
@media (min-width: 1200px) {
  /* show on hover; CSS-only for desktop (no JS required) */
    .simple-dropdown-wrap:hover > .simple-dropdown,
    .simple-dropdown-wrap:focus-within > .simple-dropdown,
    .simple-dropdown.open {
        opacity: 1;
        transform: translateY(0);
        pointer-events: auto;
    }
}

/* ===================== FORCE-DROPDOWN (paste at file end) ===================== */

/* ===== Fix dropdown stretched by global height:100% rule ===== */
@media (min-width: 1200px) {
  /* Ensure dropdown itself is not forced to 100% height */
  .simple-dropdown {
    /* Treat as a normal block list (no flex stretching) */
    display: block !important;
    position: fixed !important; /* portal sets top/left/width inline, keep fixed */
    height: auto !important;
    min-height: auto !important;
    max-height: none !important;
    overflow: visible !important;
    padding: 8px 6px !important;
    gap: 0 !important;
    background: #f9f8f8 !important;
    border-radius: 0 !important;
    box-shadow: none !important;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-6px);
    transition: opacity .18s ease, transform .18s ease, visibility .02s linear;
    pointer-events: none;
    white-space: nowrap; /* prevent wrapping of single-line items */
    z-index: 2000 !important;
  }

  /* When open, reveal and allow interaction */
  .simple-dropdown.open {
    opacity: 1 !important;
    visibility: visible !important;
    /* transform: translateY(0) !important; */
    pointer-events: auto !important;
    left: 0 !important;
    padding-left: 50% !important;
    padding-bottom: 20px !important;
    width: 100% !important;
    border-bottom: 1px rgba(76, 91, 97, 0.22) solid;
    box-shadow: 10px 10px 14px -8px rgba(76, 91, 97, 0.22) !important;
    -webkit-box-shadow: 10px 10px 14px -8px rgba(76, 91, 97, 0.22) !important;
}

  /* items stacked vertically, compact spacing */
  .simple-dropdown > .simple-dropdown-item {
    display: block !important;
    margin: 0 !important;
    padding: 0 !important;
  }

  .simple-dropdown-item > a,
  .simple-dropdown-item > button {
    display: block !important;
    padding: 10px 12px !important;
    margin: 0 !important;
    color: #4c5b61 !important;
    text-decoration: none !important;
    font-weight: 500;
    white-space: nowrap;
    border-radius: 4px;
  }

  .simple-dropdown-item:hover > a,
  .simple-dropdown-item:hover > button {
    /* background: rgba(45,188,193,0.08) !important; */
    color: #2dbcc1 !important;
  }

  /* Push the main down when dropdown is open.
     Target both <main> and .app-main (handles different markup). */
  .app-navbar.dropdown-open + main,
  .app-navbar.dropdown-open ~ main,
  .app-navbar.dropdown-open + .app-main,
  .app-navbar.dropdown-open ~ .app-main {
    margin-top: calc(var(--dropdown-open-height, 0px) + 155px) !important;
    transition: margin-top .18s ease !important;
  }
}

/* fallback push-down */
@media (min-width: 1200px) {
  .app-navbar.dropdown-open + main,
  .app-navbar.dropdown-open ~ .app-main {
    margin-top: calc(var(--dropdown-open-height, 0px) + 8px);
    transition: margin-top .18s ease;
  }
}
@media (min-width: 1400px) {
  .simple-dropdown.open{
    padding-left: 60% !important;
  }
}

@media (min-width: 1755px) {
  .simple-dropdown.open{
    padding-left: 67% !important;
  }
}

/*------Cart-------*/

a.myorder {
    font-size: 24px;
    font-weight: 600;
    color: #4c5b61 !important;
    padding-top: 7.4px;
    /* width: auto; */
    margin-left: auto;
    text-decoration: none;
    white-space: nowrap;
}

.main-cart {
  color: #4c5b61 !important;
  padding: 0 0 10px 0 !important;
  transition: none !important;
  border: none;
  width: 2em;
  background: none;
}

.main-cart-vertical {
  color: #4c5b61 !important;
  padding-bottom: 1px !important;
  transition: none !important;
  border: none;
  width: 2em;
}

.css-2ao5rv-MuiBadge-badge {
    font-size: 1.1rem !important;
    font-style: normal !important;
    font-weight: 800 !important;
    margin: 7px 7px 0 0 !important;
    height: auto !important;
}

@media (max-width: 992px) {
    a.myorder {
        font-size: 20px !important;
    }
    .myorder .myorder-label {
      display:none;
    }
    .main-cart {
      width: 3em;
    }
    .css-2ao5rv-MuiBadge-badge {
        margin: 12px 12px 0 0 !important;
    }
}
@media (max-width: 1300px) {
    a.myorder {
        padding-top: 7.3px !important;
        font-size: 24px !important;
    }
    .main-cart {
        padding-bottom: 8px !important;
    }
}


/* ----------------- Strong, final dropdown patch (place at file end) ----------------- */

/* prevent ancestor clipping (increase specificity if other rules override) */
.app-navbar, .nav-links, .nav-left, .nav-right, nav, header {
  overflow: visible !important;
}

.simple-dropdown.open {
  opacity: 1 !important;
  transform: none !important;
  pointer-events: auto !important;
  display: block !important;
}

/* base wrapper + trigger */
.simple-dropdown-wrap {
  position: relative;
  display: inline-block;
}
.dropdown-trigger {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  color: #4c5b61;
  font-weight: 500;
  font-size: 1rem;
}

/* base dropdown list (shared defaults) */
.simple-dropdown {
  list-style: none;
  margin: 0;
  padding: 0.25rem 0;
  transition: opacity .18s ease, transform .18s ease, max-height .28s ease;
  z-index: 3000;
}

/* ---------- DESKTOP (>= 992px): absolute menu with shadow + radius ---------- */
@media (min-width: 1200px) {
  .simple-dropdown {
    position: absolute;
    /* top: calc(100% - 2px) !important; */
    left: 0;
    min-width: 200px;
    background: #f9f8f8;
    border-radius: 18px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.12);
    overflow: visible;          /* show shadow outside box */
    opacity: 0;
    transform: translateY(-2px);
    pointer-events: none;
  }

  /* show on hover or when open class is added */
  .simple-dropdown-wrap:hover > .simple-dropdown,
  .simple-dropdown-wrap:focus-within > .simple-dropdown,
  .simple-dropdown.open {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
    
  }

  /* ensure each item */
  .simple-dropdown-item > a,
  .simple-dropdown-item > button {
    /* display: block; */
    padding: .45rem 1rem;
    color: #4c5b61;
    text-decoration: none;
  }
}
/* ---------- MOBILE (< 992px): inline, toggles via .open, slide down w/ max-height ---------- */
@media (max-width: 1200px) {
  .simple-dropdown-wrap { display: block; width: 100%; }
  .simple-dropdown {
    position: relative;
    width: 100%;
    max-height: 0;               /* collapsed */
    overflow: hidden;
    opacity: 0;
    pointer-events: none;
    padding: 0;
    background: transparent;
    border-radius: 0;
    box-shadow: none;
    transform: none;
  }
  .simple-dropdown.open {
    max-height: 600px;           /* large enough to fit items */
    opacity: 1;
    pointer-events: auto;
    padding: .5rem 0;
    /* background: rgb(230, 229, 229); */
    /* border-radius: 12px; */
    /* box-shadow: 0 10px 30px rgba(0,0,0,0.12); */
  }

  .simple-dropdown-item > a,
  .simple-dropdown-item > button {
    display: block;
    padding: .5rem 1rem;
    color: #4c5b61;
    text-decoration: none;
  }

  /* only add extra spacing to the next li when dropdown's parent li has "open" */
  .nav-links li.nav-item.open + li {
    margin-top: 1rem;
    transition: margin-top .28s ease;
  }
}









/* ----------------- CANCEL dropdown push-down (desktop only) ----------------- */
/* Keep this at the end of navbar.css to override previous rules that push main down */
@media (min-width: 1200px) {
  .app-navbar.dropdown-open + main,
  .app-navbar.dropdown-open ~ main,
  .app-navbar.dropdown-open + .app-main,
  .app-navbar.dropdown-open ~ .app-main {
    /* neutralize any margin-top previously applied */
    margin-top: 0 !important;
    transition: none !important;
  }
}

/* ----------------- DESKTOP modal-style dropdown + backdrop (>=1200px) ----------------- */
@media (min-width: 1200px) {
  :root {
  --dropdown-transition-duration: 350ms;
  --dropdown-ease: cubic-bezier(.2,.9,.2,1);
}
  /* the backdrop element is injected by the portal and has inline top = coords.top */
  .dropdown-backdrop {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    /* top should be set inline by the portal to start below the navbar (coords.top) */
    background: rgba(0,0,0,0.14);
    z-index: 1990;                 /* behind dropdown but above normal content */
    transition: opacity .18s ease;
    opacity: 0;
    transition: opacity var(--dropdown-transition-duration) var(--dropdown-ease);
    will-change: opacity;
    pointer-events: none;          /* clicking it will close the dropdown via the handler */
  }
  .dropdown-backdrop.open {
    opacity: 1;
    pointer-events: auto;
  }
  .dropdown-backdrop.closing {
    opacity: 0;
    pointer-events: none;
  }
  /* hide backdrop when dropdown closed (optional JS/class could toggle) */
  .dropdown-backdrop.hidden {
    opacity: 0;
    pointer-events: none;
  }

  /* ensure portal dropdown is fixed and sits above the backdrop */
  .dropdown-portal-root .simple-dropdown,
  .simple-dropdown {
    position: fixed !important;   /* portal already sets inline top/left but force fixed */
    z-index: 2000 !important;  
    opacity: 0;
    transform: translateY(-6px) scaleY(0.99);
    transform-origin: top center;
    transition: opacity var(--dropdown-transition-duration) var(--dropdown-ease),
                transform var(--dropdown-transition-duration) var(--dropdown-ease);
    will-change: opacity, transform;
    pointer-events: none;
       /* above the backdrop */
    box-shadow: 0 12px 30px rgba(0,0,0,0.12) !important; /* modal shadow */
    border-radius: 6px !important;
    background: #f9f8f8 !important;
    overflow: visible !important;
    /* keep the appearance transitions already defined */
  }

  /* keep closed state hidden (if your JS toggles class .open) */
  .simple-dropdown:not(.open) {
    opacity: 0 !important;
    visibility: hidden !important;
    pointer-events: none !important;
    transform: translateY(-8px) scaleY(0.995) !important;
  }

  .simple-dropdown.open {
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    transform: translateY(0) scaleY(1) !important;
    top: 99px !important;
  }
    .dropdown-backdrop.closing {
    opacity: 0;
    pointer-events: none;
  }
}
